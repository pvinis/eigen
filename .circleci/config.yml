version: 2.1

orbs:
  node: circleci/node@5.2.0
  queue: eddiewebb/queue@1.12.0
  horizon: artsy/release@0.0.1

commands:
  await-previous-builds:
    parameters:
      branch:
        description: The branch to wait on
        type: string
    steps:
      - queue/until_front_of_line:
          time: "30" # how long a queue will wait until the job exits
          only-on-branch: <<parameters.branch>> # restrict queueing to a specific branch (default *)
  install-node:
    steps:
      - node/install:
          install-yarn: true
          node-version: "16.18.0"
  generate-checksums:
    steps:
      - run:
          name: "Generate initial checksum manifests"
          command: |
            mkdir .manifests
            scripts/generate-manifest.js .manifests/node_modules '^yarn\.lock$' '^patches/' '^package\.json$'
            scripts/generate-manifest.js .manifests/js_transform '^\.manifests/node_modules' '^babel\.config\.js' '^relay\.config\.js' '^jest\.config\.js'
            scripts/generate-manifest.js .manifests/js_bundle '^\.manifests/js_transform' '^data/' '^index\.ios\.js' '^src/(?!.*(__mocks__|__fixtures__))'
            scripts/generate-manifest.js .manifests/cocoapods '^ios/Podfile' '^Gemfile'
            scripts/generate-manifest.js .manifests/native_code '^\.manifests/node_modules' '^ios/Podfile' '^Gemfile' '^dist/' '^ios/Artsy' '^patches/react-native' '^\.env\.example'
            scripts/generate-manifest.js .manifests/android_native '^\.manifests/node_modules' '^android/' '^patches/react-native' '^\.env\.example'
  setup-env-file:
    steps:
      - run:
          name: "Set up .env file"
          command: touch .env.shared && touch .env && scripts/setup-env-for-ci
  setup-awscli:
    steps:
      - run:
          name: "Set up aws cli not installed"
          command: scripts/setup-awscli
  install-node-modules:
    steps:
      - restore_cache:
          keys:
            - v8-node_modules-{{ checksum ".manifests/node_modules" }}-{{ arch }}
      - run:
          name: Install node modules
          command: ls node_modules || yarn install
      - save_cache:
          key: v8-node_modules-{{ checksum ".manifests/node_modules" }}-{{ arch }}
          paths:
            - node_modules
  run-relay-compiler:
    steps:
      - run:
          name: Run Relay compiler
          command: yarn relay
  update-echo:
    steps:
      - run:
          name: Update echo
          command: ./scripts/update-echo
  generate-query-map:
    steps:
      - run:
          name: Compile query map
          command: yarn relay
  bundle-js:
    steps:
      - restore_cache:
          keys:
            - v8-js_bundle-{{ checksum ".manifests/js_bundle" }}
      - restore_cache:
          keys:
            - v7-metro-{{ checksum ".manifests/js_transform" }}
      - run:
          name: Bundle emission
          command: ls dist/jsbundle.js || yarn bundle-for-native-ci:ios
      - save_cache:
          key: v7-metro-{{ checksum ".manifests/js_transform" }}
          paths:
            - .cache/metro
      - save_cache:
          key: v8-js_bundle-{{ checksum ".manifests/js_bundle" }}
          paths:
            - dist/jsbundle.js
            - dist/jsbundle.js.map
            - dist/assets
  install-gems:
    steps:
      - restore_cache:
          keys:
            - v5-gems-{{ checksum "Gemfile.lock" }}-{{ arch }}
      - run:
          name: Bundle install
          command: bundle check || bundle install
          environment:
            BUNDLE_JOBS: 4
            BUNDLE_RETRY: 3
      - save_cache:
          key: v5-gems-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - .vendor
  install-cocoapods:
    steps:
      - restore_cache:
          keys:
            - v12-pods-{{ checksum ".manifests/cocoapods" }}
      - run:
          name: Install Pods
          command: cd ios; bundle exec pod check --ignore-dev-pods || bundle exec pod install; cd ..;
      - save_cache:
          key: v12-pods-{{ checksum ".manifests/cocoapods" }}
          paths:
            - ios/Pods
            # this changes after pod install because we don't install dev tools on CI
            # so we save it to the cache to avoid comparison errors with Pods/Manifest.lock
            - ios/Podfile.lock
  build-app-ios:
    steps:
      - restore_cache:
          keys:
            - v8-app_build_ios-{{ checksum ".manifests/app_build" }}
      - run:
          name: Download fonts from s3
          command: ./scripts/download-assets
      - run:
          name: Build App
          command: ./scripts/ci-ios
      - save_cache:
          key: v8-app_build_ios-{{ checksum ".manifests/app_build" }}
          paths:
            - derived_data
            - node_modules/react-native-config
  prep-android-env:
    steps:
      - attach_workspace:
          at: ../workspace
      - run:
          name: Clear project dir
          command: |
            rm -rf /Users/distiller/project
      - checkout
      - attach_workspace:
          at: .
      - install-node
      - setup-awscli
      - setup-env-file
      - restore_cache:
          keys:
            - v6-test-success-{{ checksum "../workspace/.manifests/android_native" }}
      - run:
          name: Quit early if possible
          command: |
            if test $CIRCLE_BRANCH != beta-android && ls build-success.log
            then
              circleci step halt
            fi
      - install-node-modules
      - run-relay-compiler
      - update-echo
      - install-gems
  build-app-android:
    steps:
      - restore_cache:
          keys:
            - v1-app_build_android-{{ checksum ".manifests/app_build" }}
      - generate-query-map
      - run:
          name: Download fonts from s3
          command: ./scripts/download-assets
      - run:
          name: Build App
          command: ./scripts/ci-android
      - save_cache:
          key: v1-app_build_android-{{ checksum ".manifests/app_build" }}
          paths:
            - android/build
            - android/app/build
            - node_modules/react-native-config
jobs:
  detect-secrets:
    docker:
      - image: artsy/detect-secrets:ci # pragma: allowlist secret
    resource_class: small
    working_directory: /usr/src/app
    steps:
      - checkout
      - run: ./scripts/secrets-check-all

  deploy-nightly-beta:
    environment:
      BUNDLE_PATH: .vendor # path to install gems and use for caching

    macos:
      xcode: 14.1.0

    steps:
      - checkout
      - install-node
      - run:
          name: Deploy beta
          command: ./scripts/deploy-beta-both

  test-js:
    parallelism: 8
    executor:
      name: node/default
      tag: "16.18.0"
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run-relay-compiler
      - run:
          command: yarn jest --ci --forceExit --logHeapUsage --runInBand --reporters=default --reporters=jest-junit --shard=$(expr $CIRCLE_NODE_INDEX + 1)/$CIRCLE_NODE_TOTAL
          name: Run Jest tests
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
            JEST_JUNIT_UNIQUE_OUTPUT_NAME: true
      - store_artifacts:
          path: ./reports/junit/
      - store_test_results:
          path: ./reports/junit/

  type-check:
    executor:
      name: node/default
      tag: "16.18.0"
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run-relay-compiler
      - run:
          command: yarn type-check

  update-metaphysics:
    executor:
      name: node/default
      tag: "16.18.0"
    steps:
      - checkout
      - generate-checksums
      - install-node-modules
      - run-relay-compiler
      - generate-query-map
      - run:
          name: Update metaphysics
          command: yarn update-metaphysics

  check-code:
    executor:
      name: node/default
      tag: "16.18.0"
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Danger
          command: yarn danger ci --verbose

  check-flags:
    environment:
      BUNDLE_PATH: .vendor # path to install gems and use for caching

    macos:
      xcode: 14.1.0

    steps:
      - checkout
      - generate-checksums
      - install-node
      - install-gems
      - run:
          name: Check flags
          command: ./scripts/biweekly-flag-check.sh

  check-if-app-has-been-approved-for-release:
    environment:
      BUNDLE_PATH: .vendor # path to install gems and use for caching

    macos:
      xcode: 14.1.0

    steps:
      - checkout
      - generate-checksums
      - install-gems
      - run:
          name: Check flags
          command: ./scripts/check-if-app-has-been-approved-for-release.sh

  build-test-js:
    executor:
      name: node/default
      tag: "16.18.0"
    resource_class: large
    steps:
      - checkout
      - generate-checksums
      - setup-awscli
      - setup-env-file
      - install-node-modules
      - run-relay-compiler
      - update-echo
      - generate-query-map
      - run:
          name: Check generated folder
          command: |
            if test "$(git diff -- src/__generated__)"
            then
              echo 'You forgot to run `yarn relay` before comitting'
              exit 1
            fi
      - bundle-js
      - run:
          name: Generate app_build manifest
          command: ./scripts/generate-manifest.js .manifests/app_build '^\./manifests/native_code' '^dist/'
      - store_artifacts:
          path: .manifests
      - persist_to_workspace:
          root: .
          paths:
            - .manifests
            - dist

  build-test-app-ios:
    environment:
      BUNDLE_PATH: .vendor # path to install gems and use for caching

    macos:
      xcode: 14.1.0

    steps:
      - attach_workspace:
          at: ../workspace
      - restore_cache:
          keys:
            - v8-test-success-{{ checksum "../workspace/.manifests/native_code" }}
      # we can quit the macos build early if there were no native code changes
      # and we're not on the beta branch
      - run:
          name: Quit early if possible
          command: |
            if test $CIRCLE_BRANCH != beta-ios && ls xcode_test_raw.log
            then
              circleci step halt
            fi
      - run:
          name: Quit early if Draft PR
          command: |
            if $(curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/artsy/eigen/pulls/${CIRCLE_PULL_REQUEST##*/} | jq ".draft")
            then
              circleci step halt
            fi
      - run:
          name: Clear project dir
          command: |
            rm -rf /Users/distiller/project
      - checkout
      - attach_workspace:
          at: .
      - install-node
      - setup-awscli
      - setup-env-file
      - install-node-modules
      - run-relay-compiler
      - update-echo
      - install-gems
      - install-cocoapods
      - build-app-ios
      - run:
          name: Run tests if native code has changed
          command: ls xcode_test_raw.log || ./scripts/ci-test-ios
      - save_cache:
          key: v8-test-success-{{ checksum ".manifests/native_code" }}
          paths:
            - xcode_test_raw.log

      - store_artifacts:
          path: xcode_build_raw.log
          prefix: build

      - store_artifacts:
          path: xcode_test_raw.log
          prefix: tests

      - await-previous-builds:
          branch: beta-ios
      - run:
          name: Deploy if beta
          no_output_timeout: 20m
          command: ./scripts/deploy-if-beta-branch-ios

  build-test-app-android:
    environment:
      BUNDLE_PATH: .vendor # path to install gems and use for caching
    docker:
      - image: circleci/android:api-29-node
    resource_class: large
    steps:
      - prep-android-env
      - await-previous-builds:
          branch: beta-android
      - build-app-android
      - run:
          name: Save success file
          command: echo yes > 'build-success.log'

      - store_artifacts:
          path: android/app/build/reports
          prefix: android-build

      - save_cache:
          key: v6-test-success-{{ checksum "../workspace/.manifests/android_native" }}
          paths:
            - build-success.log
      - run:
          name: Deploy if beta - play store and firebase
          command: ./scripts/deploy-if-beta-branch-android BOTH

  update-changelog:
    executor:
      name: node/default
      tag: "16.18.0"

    steps:
      - checkout
      - generate-checksums
      - install-node-modules
      - run:
          name: Update Changelog
          command: node scripts/changelog/commitChangelog.js
      - store_artifacts:
          path: .manifests
  release-ios-app:
    environment:
      BUNDLE_PATH: .vendor # path to install gems and use for caching
    macos:
      xcode: 14.1.0
    steps:
      - checkout
      - install-gems
      - run:
          name: Release app version
          command: ./scripts/release-ios-app-branch
workflows:
  version: 2
  nightly:
    triggers:
      - schedule:
          cron: "0 6 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - deploy-nightly-beta

  flag-check:
    triggers:
      - schedule:
          cron: "0 6 * * 4"
          filters:
            branches:
              only:
                - main
    jobs:
      - check-flags

  check-if-app-has-been-approved-for-release-workflow:
    triggers:
      - schedule:
          cron: "0 4 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - check-if-app-has-been-approved-for-release

  update-changelog-workflow:
    jobs:
      - update-changelog:
          filters:
            branches:
              only:
                - main

  release-ios-app-workflow:
    jobs:
      - release-ios-app:
          filters:
            branches:
              only:
                - release-ios-app

  test-build-deploy:
    jobs:
      - detect-secrets:
          filters:
            branches:
              ignore:
                - main
                - release
                - staging

      - test-js:
          filters:
            branches:
              ignore:
                - app_store_submission
                - play_store_submission
                - update-changelog

      - type-check:
          filters:
            branches:
              ignore:
                - app_store_submission
                - play_store_submission
                - update-changelog

      - check-code:
          filters:
            branches:
              ignore:
                - main
                - beta-ios
                - beta-android
                - app_store_submission
                - play_store_submission
                - update-changelog

      - build-test-js:
          filters:
            branches:
              ignore:
                - app_store_submission
                - play_store_submission
                - update-changelog
      - horizon/block:
          context: horizon
          project_id: 37
          filters:
            branches:
              only:
                - beta-ios
                - beta-android

      - build-test-app-ios:
          filters:
            branches:
              ignore:
                - app_store_submission
                - play_store_submission
                - beta-android
                - update-changelog
          requires:
            - test-js
            - type-check
            - build-test-js
            - horizon/block

      - build-test-app-android:
          filters:
            branches:
              ignore:
                - app_store_submission
                - play_store_submission
                - beta-ios
                - update-changelog
          requires:
            - test-js
            - type-check
            - build-test-js
            - horizon/block

      - update-metaphysics:
          filters:
            branches:
              only:
                - beta-ios
                - beta-android
              ignore:
                - update-changelog
          requires:
            - build-test-app-ios
            - build-test-app-android
